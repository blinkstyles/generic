!function(e){var t={};function n(a){if(t[a])return t[a].exports;var s=t[a]={i:a,l:!1,exports:{}};return e[a].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(a,s,function(t){return e[t]}.bind(null,s));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}({"./generic/blink-src/js/cke_styles.js":
/*!********************************************!*\
  !*** ./generic/blink-src/js/cke_styles.js ***!
  \********************************************/
/*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/*\n*   Array con la definición de los estilos para el editor de CKEditor\n*/\nconst ckeStyles = [{\n  name: 'Título principal',\n  element: 'h4',\n  attributes: {\n    'class': 'bck-title bck-title1'\n  }\n}, {\n  name: 'Título principal 2',\n  element: 'h4',\n  attributes: {\n    'class': 'bck-title bck-title2'\n  }\n}, {\n  name: 'Título 1',\n  element: 'h4',\n  attributes: {\n    'class': 'bck-title bck-title3'\n  }\n}, {\n  name: 'Título 2',\n  element: 'h4',\n  attributes: {\n    'class': 'bck-title bck-title4'\n  }\n}, {\n  name: 'Título 3',\n  element: 'h4',\n  attributes: {\n    'class': 'bck-title bck-title5'\n  }\n}, {\n  name: 'Lista ordenada naranja',\n  element: 'ol',\n  attributes: {\n    'class': 'bck-ol bck-ol-2'\n  }\n}, {\n  name: 'Lista ordenada roja',\n  element: 'ol',\n  attributes: {\n    'class': 'bck-ol bck-ol-3'\n  }\n}, {\n  name: 'Lista desordenada naranja',\n  element: 'ul',\n  attributes: {\n    'class': 'bck-ul-2'\n  }\n}, {\n  name: 'Lista desordenada roja',\n  element: 'ul',\n  attributes: {\n    'class': 'bck-ul-3'\n  }\n}, {\n  name: 'Caja 1',\n  type: 'widget',\n  widget: 'blink_box',\n  attributes: {\n    'class': 'bck-box-1'\n  }\n}, {\n  name: 'Caja 2',\n  type: 'widget',\n  widget: 'blink_box',\n  attributes: {\n    'class': 'bck-box-2'\n  }\n}, {\n  name: 'Caja 3',\n  type: 'widget',\n  widget: 'blink_box',\n  attributes: {\n    'class': 'bck-box-3'\n  }\n}, {\n  name: 'Caja 4',\n  type: 'widget',\n  widget: 'blink_box',\n  attributes: {\n    'class': 'bck-box-4'\n  }\n}, {\n  name: 'Caja 5',\n  type: 'widget',\n  widget: 'blink_box',\n  attributes: {\n    'class': 'bck-box-5'\n  }\n}, {\n  name: 'Caja naranja',\n  type: 'widget',\n  widget: 'blink_box',\n  attributes: {\n    'class': 'bck-box-6'\n  }\n}, {\n  name: 'Caja azul claro',\n  type: 'widget',\n  widget: 'blink_box',\n  attributes: {\n    'class': 'bck-box-7'\n  }\n}, {\n  name: 'Caja morada',\n  type: 'widget',\n  widget: 'blink_box',\n  attributes: {\n    'class': 'bck-box-8'\n  }\n}, {\n  name: 'Caja azul oscuro',\n  type: 'widget',\n  widget: 'blink_box',\n  attributes: {\n    'class': 'bck-box-9'\n  }\n}, {\n  name: 'Caja Dorado',\n  type: 'widget',\n  widget: 'blink_box',\n  attributes: {\n    'class': 'bck-box-10'\n  }\n}, {\n  name: 'Caja roja',\n  type: 'widget',\n  widget: 'blink_box',\n  attributes: {\n    'class': 'bck-box-11'\n  }\n}, {\n  name: 'Caja verde',\n  type: 'widget',\n  widget: 'blink_box',\n  attributes: {\n    'class': 'bck-box-12'\n  }\n}, {\n  name: 'Caja amarilla',\n  type: 'widget',\n  widget: 'blink_box',\n  attributes: {\n    'class': 'bck-box-13'\n  }\n}, {\n  name: 'Caja rosa',\n  type: 'widget',\n  widget: 'blink_box',\n  attributes: {\n    'class': 'bck-box-14'\n  }\n}, {\n  name: 'Énfasis naranja',\n  element: 'span',\n  attributes: {\n    'class': 'bck-enfasis-1'\n  }\n}, {\n  name: 'Énfasis azul claro',\n  element: 'span',\n  attributes: {\n    'class': 'bck-enfasis-2'\n  }\n}, {\n  name: 'Énfasis morado',\n  element: 'span',\n  attributes: {\n    'class': 'bck-enfasis-3'\n  }\n}, {\n  name: 'Énfasis azul oscuro',\n  element: 'span',\n  attributes: {\n    'class': 'bck-enfasis-4'\n  }\n}, {\n  name: 'Énfasis dorado',\n  element: 'span',\n  attributes: {\n    'class': 'bck-enfasis-5'\n  }\n}, {\n  name: 'Énfasis rojo',\n  element: 'span',\n  attributes: {\n    'class': 'bck-enfasis-6'\n  }\n}, {\n  name: 'Énfasis verde',\n  element: 'span',\n  attributes: {\n    'class': 'bck-enfasis-7'\n  }\n}, {\n  name: 'Énfasis amarillo',\n  element: 'span',\n  attributes: {\n    'class': 'bck-enfasis-8'\n  }\n}, {\n  name: 'Énfasis rosa',\n  element: 'span',\n  attributes: {\n    'class': 'bck-enfasis-9'\n  }\n}, {\n  name: 'Tabla Naranja',\n  element: 'table',\n  attributes: {\n    'class': 'bck-table bck-table-1'\n  }\n}, {\n  name: 'Tabla Azul',\n  element: 'table',\n  attributes: {\n    'class': 'bck-table bck-table-2'\n  }\n}, {\n  name: 'Tabla Magenta',\n  element: 'table',\n  attributes: {\n    'class': 'bck-table bck-table-3'\n  }\n}, {\n  name: 'Tabla Dorada',\n  element: 'table',\n  attributes: {\n    'class': 'bck-table bck-table-4'\n  }\n}, {\n  name: 'Tabla Azul',\n  element: 'table',\n  attributes: {\n    'class': 'bck-table bck-table-5'\n  }\n}, {\n  name: 'Tabla Naranja',\n  element: 'table',\n  attributes: {\n    'class': 'bck-table bck-table-6'\n  }\n}, {\n  name: 'Tabla Verde',\n  element: 'table',\n  attributes: {\n    'class': 'bck-table bck-table-7'\n  }\n}, {\n  name: 'Tabla Rosa',\n  element: 'table',\n  attributes: {\n    'class': 'bck-table bck-table-8'\n  }\n}, {\n  name: 'Celda Naranja 1',\n  element: 'td',\n  attributes: {\n    'class': 'bck-td-1'\n  }\n}, {\n  name: 'Celda Naranja 2',\n  element: 'td',\n  attributes: {\n    'class': 'bck-td-2'\n  }\n}, {\n  name: 'Celda Azul 1',\n  element: 'td',\n  attributes: {\n    'class': 'bck-td-3'\n  }\n}, {\n  name: 'Celda Azul 2',\n  element: 'td',\n  attributes: {\n    'class': 'bck-td-4'\n  }\n}, {\n  name: 'Celda Magenta 1',\n  element: 'td',\n  attributes: {\n    'class': 'bck-td-5'\n  }\n}, {\n  name: 'Celda Magenta 2',\n  element: 'td',\n  attributes: {\n    'class': 'bck-td-6'\n  }\n}, {\n  name: 'Celda Dorado 1',\n  element: 'td',\n  attributes: {\n    'class': 'bck-td-7'\n  }\n}, {\n  name: 'Celda Dorado 2',\n  element: 'td',\n  attributes: {\n    'class': 'bck-td-8'\n  }\n}, {\n  name: 'Celda Azul oscuro 1',\n  element: 'td',\n  attributes: {\n    'class': 'bck-td-9'\n  }\n}, {\n  name: 'Celda Azul oscuro 2',\n  element: 'td',\n  attributes: {\n    'class': 'bck-td-10'\n  }\n}, {\n  name: 'Celda Roja 1',\n  element: 'td',\n  attributes: {\n    'class': 'bck-td-11'\n  }\n}, {\n  name: 'Celda Roja 2',\n  element: 'td',\n  attributes: {\n    'class': 'bck-td-12'\n  }\n}, {\n  name: 'Celda Verde 1',\n  element: 'td',\n  attributes: {\n    'class': 'bck-td-13'\n  }\n}, {\n  name: 'Celda Verde 2',\n  element: 'td',\n  attributes: {\n    'class': 'bck-td-14'\n  }\n}, {\n  name: 'Celda Rosa 1',\n  element: 'td',\n  attributes: {\n    'class': 'bck-td-15'\n  }\n}, {\n  name: 'Celda Rosa  2',\n  element: 'td',\n  attributes: {\n    'class': 'bck-td-16'\n  }\n}];\n/* harmony default export */ __webpack_exports__[\"default\"] = (ckeStyles);\n\n//# sourceURL=webpack:///./generic/blink-src/js/cke_styles.js?")},"./generic/blink-src/js/layout/main.js":
/*!*********************************************!*\
  !*** ./generic/blink-src/js/layout/main.js ***!
  \*********************************************/
/*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\nclass Layout {\n  constructor(parent) {\n    // Ids\n    this.parent = parent ? parent : document.body;\n    this.courseWrapperId = 'layout-container';\n    this.mainScreenId = 'main-screen';\n    this.sectionScreenPrefix = 'section-screen';\n    this.courseHeaderId = 'course-header';\n    this.courseContentId = 'course-content'; // Data\n\n    this.courseId = window.idcurso;\n    this.courseData = blink.getCourse(this.courseId, true, true).responseJSON;\n    this.auxTag = 'tab';\n    this.touchEnabled = 'ontouchstart' in window || navigator.MaxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;\n    this.eventsMap = {\n      end: this.touchEnabled ? 'touchend' : 'dragend',\n      move: this.touchEnabled ? 'touchmove' : 'drag',\n      start: this.touchEnabled ? 'touchstart' : 'dragstart'\n    };\n\n    if (textweb) {\n      this.texts = {\n        goBack: textweb('libroDigital_volver'),\n        studentArea: textweb('abpStudentArea'),\n        teacherArea: textweb('abpTeacherArea'),\n        noResources: textweb('abpNoResources'),\n        unitContent: textweb('course_unit_activities'),\n        resources: textweb('course_supplement_content'),\n        pags: textweb('course_abrev_pag')\n      };\n    } // Breadcumbs\n\n\n    this.breadcumbsContainer;\n    this.breadcumbs = [this.courseData.title]; // Storage\n\n    this.sectionData = {\n      sections: [],\n      navigators: {\n        left: null,\n        right: null\n      }\n    };\n    this.slider = {};\n    this.slider.currentElement = 0; // Bindings\n\n    this._resizeContainer = this.resizeContainer.bind(this); // Elements\n\n    let layoutContainer = this.createElement('DIV');\n    layoutContainer.id = this.courseWrapperId;\n    this.layoutContainer = layoutContainer;\n    this.prepareLayoutData();\n  }\n\n  init() {\n    let content = document.querySelector('.content-wrapper');\n    let slider = document.getElementById('slider');\n    let sliderControl = document.querySelectorAll('.slider-control');\n    let navbarBottom = document.querySelector('.navbar-bottom');\n    this.layoutContainer.setAttribute('style', 'background-image: url(\"' + this.courseData.image + '\"); background-size: cover;');\n    this.parent.insertBefore(this.layoutContainer, this.parent.firstElementChild); // 1. Choose layout option.\n\n    if (window.idclase && window.idclase != this.courseData.portada) {\n      // 1.1. Blink Way. For activities.\n      // 1.1.1. Goback\n      const goBackClickHandler = closeActivity;\n      let goBackWrapper = this.createElement('DIV', 'go-back');\n      let goBackButton = this.createElement('BUTTON', ['btn', 'btn-go-back']);\n      goBackButton.addEventListener('click', goBackClickHandler);\n      goBackButton.appendChild(this.createElement('SPAN', '', this.texts.goBack));\n      goBackWrapper.append(goBackButton);\n      sliderControl.forEach(el => {\n        el.addEventListener('click', e => {\n          this.changeStyle(slider.querySelector('[id*=swipeview-masterpage-] .js-slider-item'), 'overflow', 'hidden');\n        });\n        slider.addEventListener('swipeview-flip', e => {\n          this.changeStyle(slider.querySelector('[id*=swipeview-masterpage-].swipeview-active .js-slider-item'), 'overflow', 'auto');\n        });\n      });\n      this.changeStyle(content, 'background-image', 'url(\"' + this.courseData.image + '\")');\n      this.changeStyle(content, 'background-size', 'cover');\n      content.insertBefore(goBackWrapper, content.firstElementChild);\n      return false;\n    } else {\n      // 1.2. Style Way.\n      let hash = window.location.hash.substring(1); // 1.2.1 Manage old DOM elements.\n\n      this.hideElem(content);\n      this.hideElem(navbarBottom);\n      sliderControl.forEach(el => this.hideElem(el));\n      this.breadcumbsContainer = document.querySelector('.navbar.libro .libro-left span.title');\n      this.hideElem(this.breadcumbsContainer); // 1.2.2 Create section arrows.\n\n      this.sectionData.navigators = this.generateNavigators();\n      this.layoutContainer.append(this.sectionData.navigators['left'], this.sectionData.navigators['right']);\n      this.hideNavigators(); // 1.2.3. Print target screen.\n\n      if (hash.match(/unit_\\d{1,2}_/g) != null) {\n        let index = parseInt(hash.match(/\\d{1,2}/g)[0]);\n        let tab = hash.substring(hash.lastIndexOf('_') + 1);\n        this.initSection(index, tab);\n      } else if (hash.match(/home/g) != null) {\n        this.initHome();\n      } else {\n        this.initHome();\n      }\n\n      this.resizeContainer();\n    }\n\n    window.addEventListener('resize', this._resizeContainer);\n  }\n\n  initHome() {\n    this.hideNavigators();\n    this.resetBreadcumbs(); // 1. Main screen creation.\n\n    this.mainScreen = this.createElement('DIV', 'main-screen');\n    this.mainScreen.id = this.mainScreenId;\n    this.layoutContainer.appendChild(this.mainScreen); // 2. Create Header.\n\n    let courseHeader = this.generateHeader(); // 3. Create Course content.\n\n    let courseContent = this.generateContent();\n    this.mainScreen.append(courseHeader, courseContent);\n  }\n\n  initSection(index, tab) {\n    if (!index && typeof index === 'undefined') {\n      alert('No index provided');\n      return false;\n    } // 0. Hide main screen (if exists).\n\n\n    this.mainScreen && typeof this.mainScreen !== \"undefined\" && this.hideMainScreen(); // 0.1. Navigation arrows.\n\n    this.toggleNavigators(index); // If there's already a section screen for this index, we just show it.\n\n    if (this.sectionData.sections[index] && this.sectionData.sections[index] !== \"undefined\") {\n      this.showSection(index);\n      return;\n    }\n\n    const tabClickHandler = e => {\n      let currentSection = this.sectionData.sections[this.currentSection];\n      let target = e.currentTarget;\n      let targetTab = target.getAttribute('data-target');\n      this.removeClasses(currentSection.querySelector('.tab.active'), 'active');\n      this.removeClasses(currentSection.querySelector('.content.active'), 'active');\n      this.addClasses(target, 'active');\n      this.addClasses(currentSection.querySelector('.' + targetTab + '-content'), 'active');\n    };\n\n    const goBackClickHandler = e => {\n      if (!this.mainScreen || typeof this.mainScreen === 'undefined') {\n        this.initHome();\n      } else {\n        this.showMainScreen();\n      }\n\n      this.hideSection(index);\n    };\n\n    const separator = text => {\n      let wrapper = this.createElement('DIV', ['separator']);\n      wrapper.appendChild(document.createTextNode(text));\n      return wrapper;\n    };\n\n    let data = this.courseData.units[index];\n    let sectionScreen = this.createElement('DIV', 'section-screen');\n    sectionScreen.id = this.sectionScreenPrefix + '-' + index; // 0.2. Change breadcumbs.\n\n    this.addBreadcumb(data.title); // 1. Goback\n\n    let goBackWrapper = this.createElement('DIV', 'go-back');\n    let goBackButton = this.createElement('BUTTON', ['btn', 'btn-go-back']);\n    goBackButton.onclick = goBackClickHandler;\n    goBackButton.appendChild(this.createElement('SPAN', '', this.texts.goBack));\n    goBackWrapper.append(goBackButton); // 2. Section.\n\n    let sectionWrapper = this.createElement('DIV', 'section'); // 2.1. Section Data\n\n    let sectionData = this.createElement('DIV', 'section-data'); // 2.1.1. Section title\n\n    let sectionTitle = this.createElement('DIV', 'section-title');\n    sectionTitle.appendChild(this.createHeader(1, '', data.title)); // 2.1.2. Section desc\n\n    let descWrapper = this.createElement('DIV', 'desc-wrapper');\n    let sectionDesc = this.createElement('DIV', 'section-desc');\n    let sectionNumber = this.createElement('DIV', 'section-number');\n    descWrapper.setAttribute('style', 'background-image: url(\"' + data.image + '\"); background-size: cover;');\n    sectionNumber.appendChild(this.createElement('SPAN', '', index.toString().length == 1 ? '0' + index : index));\n    sectionDesc.append(this.createHeader(2, '', data.description), sectionNumber);\n    descWrapper.append(sectionDesc);\n    sectionData.append(sectionTitle, descWrapper); // 2.2. Section Content.\n\n    let sectionContent = this.createElement('DIV', 'section-content'); // 2.2.1 Tabs wrapepr.\n\n    let tabsWrapper = this.createElement('DIV', 'tabs');\n    let studentTab = this.createElement('DIV', 'tab');\n    let teacherTab = this.createElement('DIV', 'tab');\n    studentTab.appendChild(this.createHeader(2, '', this.texts.studentArea));\n    teacherTab.appendChild(this.createHeader(2, '', this.texts.teacherArea));\n    studentTab.setAttribute('data-target', 'student');\n    teacherTab.setAttribute('data-target', 'teacher');\n    studentTab.addEventListener('click', tabClickHandler);\n    teacherTab.addEventListener('click', tabClickHandler);\n    tabsWrapper.append(studentTab, teacherTab); // 2.2.2 Tabs content.\n\n    let tabsContent = this.createElement('DIV', 'tabs-content');\n    let studentContent = this.createElement('DIV', ['content', 'student-content']);\n    let teacherContent = this.createElement('DIV', ['content', 'teacher-content']);\n    let studentUnitWrapper = this.createElement('DIV', ['unit-content']);\n    let studentResourceWrapper = this.createElement('DIV', ['resources-content']);\n    let teacherUnitWrapper = this.createElement('DIV', ['unit-content']);\n    let teacherResourceWrapper = this.createElement('DIV', ['resources-content']);\n    let noResourcesWrapper = this.createElement('H2', 'no-resources', this.texts.noResources);\n    let combined = data.subunits.concat(data.resources);\n    this.hideElem(studentUnitWrapper).appendChild(separator(this.texts.unitContent));\n    this.hideElem(studentResourceWrapper).appendChild(separator(this.texts.resources));\n    this.hideElem(teacherUnitWrapper).appendChild(separator(this.texts.unitContent));\n    this.hideElem(teacherResourceWrapper).appendChild(separator(this.texts.resources));\n\n    switch (tab) {\n      case 'teacherarea':\n        this.addClasses(teacherTab, 'active');\n        this.addClasses(teacherContent, 'active');\n        break;\n\n      default:\n        this.addClasses(studentTab, 'active');\n        this.addClasses(studentContent, 'active');\n    }\n\n    combined.forEach(el => {\n      let isResource = data.resources.contains(el);\n      let elWrapper = this.createElement('DIV', 'content-item');\n      let elImg = this.createElement('DIV', ['content-img', 'type-' + el.typeInt, el.type]);\n      let elTitleWrapper = this.createElement('DIV', 'content-title');\n      let elTitle = this.createElement('SPAN', null, el.title);\n      let targetWrapper; // 2.2.2.1. Title creation.\n\n      elTitleWrapper.appendChild(elTitle);\n      elWrapper.append(elImg, elTitleWrapper); // 2.2.2.2. Button creation\n\n      if (!isResource) {\n        let elButtons = this.createElement('DIV', 'content-buttons');\n        let elLock = this.createElement('SPAN', 'content-lock');\n        let elPageCount = this.createElement('SPAN', 'content-page-count');\n        let pageCountTxt = el.pags ? el.pags + ' ' + this.texts.pags.replace('.', el.pags > 1 ? 's.' : '.') : '';\n        elLock.addEventListener('click', e => {\n          e.stopPropagation();\n          let target = e.currentTarget;\n          let lockClass = 'locked';\n          target.classList.contains(lockClass) ? this.removeClasses(target, lockClass) : this.addClasses(target, lockClass);\n        });\n        elPageCount.appendChild(document.createTextNode(pageCountTxt));\n        elButtons.append(elLock, elPageCount);\n        elWrapper.appendChild(elButtons);\n      }\n\n      elWrapper.setAttribute('onclick', el.onclickTitle);\n\n      if (el.onlyVisibleTeachers) {\n        let elCircleOuter = this.createElement('DIV', 'circle-outer');\n        let elCircleInner = this.createElement('DIV', 'circle-inner');\n        elWrapper.insertBefore(elCircleOuter, elImg);\n        elWrapper.insertBefore(elCircleInner, elImg);\n        targetWrapper = isResource ? teacherResourceWrapper : teacherUnitWrapper;\n      } else {\n        // 2.2.2.1. Image creation.\n        this.changeStyle(elImg, 'background-image', 'url(' + el.image + ')');\n        targetWrapper = isResource ? studentResourceWrapper : studentUnitWrapper;\n      }\n\n      targetWrapper.appendChild(elWrapper);\n      this.isHidden(targetWrapper, true) && this.showElem(targetWrapper);\n    });\n\n    if (teacherResourceWrapper.childElementCount == 1 && teacherUnitWrapper.childElementCount == 1) {\n      teacherContent.append(noResourcesWrapper.cloneNode(true));\n    } else {\n      teacherContent.append(teacherUnitWrapper, teacherResourceWrapper);\n    }\n\n    if (studentResourceWrapper.childElementCount == 1 && studentUnitWrapper.childElementCount == 1) {\n      studentContent.append(noResourcesWrapper.cloneNode(true));\n    } else {\n      studentContent.append(studentUnitWrapper, studentResourceWrapper);\n    }\n\n    tabsContent.append(studentContent, teacherContent);\n    sectionContent.append(tabsWrapper, tabsContent);\n    sectionWrapper.append(sectionData, sectionContent); // 3. Fake padding.\n\n    let fakePadding = this.createElement('DIV');\n    sectionScreen.append(goBackWrapper, sectionWrapper, fakePadding);\n    this.currentSection = index;\n    this.sectionData.sections[index] = sectionScreen;\n    this.layoutContainer.appendChild(sectionScreen);\n  }\n\n  prepareLayoutData() {\n    let layoutData = {\n      auxActivities: [],\n      unitsData: []\n    };\n    let auxTag = this.auxTag;\n    this.courseData.units.forEach(function (unit) {\n      unit.subunits.forEach(function (activity) {\n        if (activity.tags && activity.tags.indexOf(auxTag) != -1) {\n          layoutData['auxActivities'].push(activity);\n        }\n      });\n    });\n    this.layoutData = layoutData;\n  }\n\n  generateHeader() {\n    let courseHeader = this.createElement('DIV');\n    courseHeader.id = this.courseHeaderId; // 1.1. Create title\n\n    let titleWrapper = this.createElement('DIV', 'course-title');\n    let title = this.createHeader(1, '', this.courseData.title);\n    let subtitle = this.createElement('SPAN', '', this.courseData.description);\n    titleWrapper.append(title, subtitle); // 1.2. Create extra wrapper.\n\n    let extraWrapper = this.createElement('DIV', 'course-extra');\n    let extraList = this.createElement('UL');\n    this.layoutData.auxActivities.forEach(function (a, i) {\n      let wrapper = this.createElement('LI');\n      let anchor = this.createElement('A');\n      let title = this.createElement('SPAN', '', a.title);\n      anchor.href = 'javascript:void(0)';\n      anchor.setAttribute('onclick', a.onclickTitle);\n      anchor.appendChild(title);\n      wrapper.id = 'tabs-item' + i;\n      extraList.appendChild(wrapper).appendChild(anchor);\n    }, this);\n    extraWrapper.appendChild(extraList); // 1.3 Append both elements.\n\n    courseHeader.append(titleWrapper, extraWrapper);\n    return courseHeader;\n  }\n\n  generateContent() {\n    let courseContent = this.createElement('DIV', 'course-content');\n    courseContent.id = this.courseContentId;\n    let auxTag = this.auxTag; // 2.1. Wrapper\n\n    let sliderWrapper = this.createElement('DIV', 'slider-wrapper'); // 2.2. Controls\n\n    let sliderControlLeft = this.createElement('DIV', ['slider-navcontrol', 'slider-navcontrol-left']);\n    let sliderControlRight = this.createElement('DIV', ['slider-navcontrol', 'slider-navcontrol-right']);\n    let sliderControlLeftArrow = this.createElement('SPAN');\n    let sliderControlRightArrow = this.createElement('SPAN');\n    let arrowLeft = this.createElement('I', ['fa', 'fa-angle-left']);\n    let arrowRight = this.createElement('I', ['fa', 'fa-angle-right']);\n    arrowLeft.addEventListener('click', () => this.slideLeft());\n    arrowRight.addEventListener('click', () => this.slideRight()); // We hide the left control arrow at startup.\n\n    this.hideElem(sliderControlLeft, true).appendChild(sliderControlLeftArrow).appendChild(arrowLeft);\n    sliderControlRight.appendChild(sliderControlRightArrow).appendChild(arrowRight); // 2.3. Track\n\n    let sliderTrack = this.createElement('DIV', 'slider-itemtrack');\n    let sliderCarousel = this.createElement('DIV', 'slider-carousel'); // 2.4. Slider Items.\n\n    this.courseData.units.forEach(function (unit, i) {\n      if (unit.tags && unit.tags.indexOf(auxTag) != -1) {\n        return;\n      }\n\n      let sliderItem = this.createElement('DIV', 'slider-item');\n      sliderItem.id = 'slider-item-' + (i - 1); // 2.4.0 Anchor wrapper\n\n      let anchorWrapper = this.createElement('A', '');\n      this.setAttributes(anchorWrapper, {\n        href: 'javascript:void(0)'\n      });\n      anchorWrapper.addEventListener('click', () => {\n        this.initSection(i);\n      }); // 2.4.1. Item title\n\n      let itemTitle = this.createElement('DIV', 'section-title');\n      itemTitle.appendChild(this.createHeader(3, '', unit.title)); //2.4.2. Item img\n\n      let itemImg = this.createElement('DIV', 'section-img');\n      itemImg.setAttribute('style', 'background-image: url(\"' + unit.image + '\"); background-size: cover;'); // 2.4.3. Item Desc\n\n      let itemDesc = this.createElement('DIV', 'section-desc');\n      itemDesc.appendChild(this.createHeader(4, '', unit.description)); // 2.4.4. Item Number\n\n      let itemNumber = this.createElement('DIV', 'section-number');\n      itemNumber.appendChild(this.createElement('SPAN', '', i.toString().length == 1 ? '0' + i : i));\n      sliderCarousel.appendChild(sliderItem).appendChild(anchorWrapper).append(itemTitle, itemImg, itemDesc, itemNumber);\n    }, this);\n    sliderTrack.appendChild(sliderCarousel);\n    sliderWrapper.append(sliderControlLeft, sliderTrack, sliderControlRight);\n    courseContent.appendChild(sliderWrapper); // 2.5. Drag slide handling.\n\n    let dragStartHandler = e => {\n      let tgt = e.currentTarget;\n      let wrapper = document.querySelector('#' + this.courseContentId);\n      let items = tgt.querySelectorAll('[id*=slider-item]');\n      let offsetMap = [];\n      items.forEach(e => offsetMap.push(e.offsetLeft));\n      e.stopPropagation();\n      var startX = this.touchEnabled ? e.targetTouches[0].screenX : e.screenX;\n\n      let dragHandler = e => {\n        let screenX = this.touchEnabled ? e.targetTouches[0].screenX : e.screenX;\n        e.stopPropagation();\n        if (startX == screenX || screenX == 0) return;\n        let transformVal = e.currentTarget.style.getPropertyValue('transform');\n        let currentX = transformVal == '' ? 0 : parseInt(transformVal.match(/\\d+/g)[0]);\n        let calcX = screenX - startX - currentX;\n        this.changeStyle(e.currentTarget, 'transform', 'translateX(' + (calcX > 0 ? 0 : calcX) + 'px)');\n        startX = screenX;\n      };\n\n      let dragEndHandler = e => {\n        let calcX = null;\n        let transformVal = e.currentTarget.style.getPropertyValue('transform');\n        let currentX = transformVal == '' ? 0 : parseInt(transformVal.match(/\\d+/g)[0]);\n        offsetMap.forEach((e, i) => {\n          if (Math.abs(currentX - e) < Math.abs(currentX - offsetMap[i - 1]) || i - 1 < 0) {\n            this.slider.currentElement = i;\n            calcX = -e;\n          }\n        }, this);\n        this.changeStyle(e.currentTarget, 'transform', 'translateX(' + (calcX > 0 ? 0 : calcX) + 'px)');\n        e.currentTarget.removeEventListener(this.eventsMap['move'], dragHandler);\n        e.currentTarget.removeEventListener(this.eventsMap['end'], dragEndHandler); // Arrow management\n\n        wrapper.querySelectorAll('.slider-navcontrol').forEach(arrow => {\n          if (arrow.className.indexOf('left') != -1 && this.slider.currentElement == 0 || arrow.className.indexOf('right') != -1 && this.slider.currentElement == items.length - 1) {\n            this.hideElem(arrow, true);\n          } else {\n            this.showElem(arrow);\n          }\n        });\n      };\n\n      tgt.addEventListener(this.eventsMap['move'], dragHandler);\n      tgt.addEventListener(this.eventsMap['end'], dragEndHandler);\n    };\n\n    sliderCarousel.addEventListener(this.eventsMap['start'], dragStartHandler);\n    return courseContent;\n  }\n\n  generateNavigators() {\n    let leftClasses = ['section-navigation', 'left'];\n    let rightClasses = ['section-navigation', 'right'];\n    let arrowLeft = this.createElement('BUTTON', leftClasses);\n    let arrowRight = this.createElement('BUTTON', rightClasses);\n    arrowLeft.appendChild(this.createElement('I', ['fa', 'fa-angle-left']));\n    arrowRight.appendChild(this.createElement('I', ['fa', 'fa-angle-right']));\n    arrowLeft.addEventListener('click', () => this.slidePrevSection());\n    arrowRight.addEventListener('click', () => this.slideNextSection());\n    return {\n      left: arrowLeft,\n      right: arrowRight\n    };\n  }\n\n  slide(direction) {\n    let wrapper = document.querySelector('div#course-content');\n    let track = wrapper.querySelector('.slider-itemtrack');\n    let carousel = wrapper.querySelector('.slider-carousel');\n    let items = wrapper.querySelectorAll('[id*=slider-item]');\n    let currentElement = items[this.slider.currentElement];\n    let targetElement;\n    let offset; // Add transform to reset elements offset;\n\n    carousel.style.transform == '' && (carousel.style.transform = 'translateX(0px)');\n\n    if (direction == 'ltr') {\n      if (this.slider.currentElement == items.length - 1) return;\n      items.forEach(function (e, i) {\n        if (i < this.slider.currentElement) return;\n        let curOffset = e.offsetLeft - currentElement.offsetLeft;\n        if (targetElement && typeof targetElement !== 'undefined') return;\n\n        if (Math.abs(curOffset) > track.offsetWidth) {\n          targetElement = e.previousElementSibling;\n          this.slider.currentElement = i - 1;\n        } else if (i == items.length - 1) {\n          targetElement = e;\n          this.slider.currentElement = i;\n        }\n      }, this);\n      offset = -targetElement.offsetLeft;\n    } else {\n      if (this.slider.currentElement == 0) return;\n      items.forEach(function (e, i) {\n        let rIndex = items.length - 1 - i;\n        if (rIndex > this.slider.currentElement) return;\n        let rEl = items[rIndex];\n        let curOffset = rEl.offsetLeft - currentElement.offsetLeft;\n        if (targetElement && typeof targetElement !== 'undefined') return;\n\n        if (Math.abs(curOffset) > track.offsetWidth) {\n          targetElement = rEl.nextSibling;\n          this.slider.currentElement = rIndex + 1;\n        } else if (rIndex == 0) {\n          targetElement = rEl;\n          this.slider.currentElement = rIndex;\n        }\n      }, this);\n      offset = -targetElement.offsetLeft;\n    }\n\n    if (typeof offset !== 'undefined') carousel.style.transform = 'translateX(' + offset + 'px)'; // Arrow management\n\n    wrapper.querySelectorAll('.slider-navcontrol').forEach(arrow => {\n      if (arrow.className.indexOf('left') != -1 && this.slider.currentElement == 0 || arrow.className.indexOf('right') != -1 && this.slider.currentElement == items.length - 1) {\n        this.hideElem(arrow, true);\n      } else {\n        this.showElem(arrow);\n      }\n    });\n  }\n\n  slideLeft() {\n    this.slide();\n  }\n\n  slideRight() {\n    this.slide('ltr');\n  }\n\n  slideNextSection() {\n    if (this.courseData.units.length - 1 == this.currentSection) {\n      this.hideElem(this.sectionData.navigators['right']);\n      return false;\n    }\n\n    this.slideSection(this.currentSection + 1);\n  }\n\n  slidePrevSection() {\n    if (this.currentSection == 1) {\n      this.hideElem(this.sectionData.navigators['left']);\n      return false;\n    }\n\n    this.slideSection(this.currentSection - 1);\n  }\n\n  slideSection(index) {\n    this.hideSection(this.currentSection);\n    this.toggleNavigators(index);\n\n    if (this.sectionData.sections[index] && typeof this.sectionData.sections[index] !== \"undefined\") {\n      this.showSection(index);\n      return;\n    }\n\n    this.initSection(index);\n  } // SHOW/HIDE\n\n\n  showMainScreen() {\n    this.hideNavigators();\n    this.resetBreadcumbs();\n    this.mainScreen && this.showElem(this.mainScreen);\n  }\n\n  hideMainScreen() {\n    this.mainScreen && this.hideElem(this.mainScreen);\n  }\n\n  showSection(index) {\n    let data = this.courseData.units[index];\n    this.addBreadcumb(data.title);\n    this.sectionData.sections[index] && this.showElem(this.sectionData.sections[index]);\n    this.currentSection = index;\n  }\n\n  hideSection(index) {\n    this.sectionData.sections[index] && this.hideElem(this.sectionData.sections[index]);\n  }\n\n  toggleNavigators(index) {\n    if (!index || typeof index === 'undefined') return false;\n    let navs = this.sectionData.navigators;\n    index == 1 ? this.hideElem(navs.left, true) : this.showElem(navs.left);\n    this.courseData.units.length - 1 == index ? this.hideElem(navs.right, true) : this.showElem(navs.right);\n  }\n\n  showNavigators() {\n    if (!this.sectionData.navigators || typeof this.sectionData.navigators === 'undefined') return false;\n\n    for (let nav in this.sectionData.navigators) {\n      this.showElem(this.sectionData.navigators[nav]);\n    }\n  }\n\n  hideNavigators() {\n    if (!this.sectionData.navigators || typeof this.sectionData.navigators === 'undefined') return false;\n\n    for (let nav in this.sectionData.navigators) {\n      this.hideElem(this.sectionData.navigators[nav]);\n    }\n  }\n\n  showElem(el) {\n    if (!el || typeof el === 'undefined') return false;\n    this.changeStyle(el, 'visibility', '');\n    el.style.display == 'none' && this.changeStyle(el, 'display', '');\n    return el;\n  }\n\n  hideElem(el, display) {\n    if (!el || typeof el === 'undefined') return false;\n    this.changeStyle(el, 'visibility', 'hidden');\n    (!display || typeof display === 'undefined') && this.changeStyle(el, 'display', 'none');\n    return el;\n  }\n\n  isHidden(el, checkDisplay) {\n    let visible = el.style.visibility === 'hidden';\n    let displayed = el.style.display === 'none';\n    return visible && (!checkDisplay || typeof checkDisplay === 'undefined' || displayed);\n  } // BREADCUMBS\n\n\n  updateBreadcumbs() {\n    this.breadcumbsContainer.innerText = '';\n    this.breadcumbs.forEach((text, level) => {\n      let formattedText = document.createTextNode(text + (level == this.breadcumbs.length - 1 ? '' : ' > '));\n      text && typeof text !== 'undefined' && this.breadcumbsContainer.appendChild(formattedText);\n    });\n    this.isHidden(this.breadcumbsContainer) && this.showElem(this.breadcumbsContainer);\n  }\n\n  addBreadcumb(text, level) {\n    level && typeof level !== 'undefined' ? this.breadcumbs[level] = text : this.breadcumbs.push(text);\n    this.updateBreadcumbs();\n  }\n\n  removeBreadcumb(level) {\n    level && typeof level !== 'undefined' ? this.breadcumbs[level] = undefined : this.breadcumbs.pop();\n    this.updateBreadcumbs();\n  }\n\n  resetBreadcumbs() {\n    this.breadcumbs = [this.breadcumbs[0]];\n    this.updateBreadcumbs();\n  } // DIMENSIONS\n\n\n  resizeContainer() {\n    let el = this.layoutContainer;\n    let top = document.querySelector('.navbar.libro').offsetHeight;\n    let height = window.innerHeight - top;\n    this.setElementHeight(el, height);\n    this.setElementOffsetX(el, top);\n  }\n\n  setElementHeight(el, height) {\n    let strHeight = typeof height !== 'string' || height.indexOf('px') == -1 ? height + 'px' : height;\n    el.style.height = strHeight;\n  }\n\n  setElementOffsetX(el, top) {\n    let strTop = typeof top !== 'string' || top.indexOf('px') == -1 ? top + 'px' : top;\n    el.style.top = strTop;\n  }\n\n  setAttributes(el, attrs) {\n    if (!attrs || !(attrs instanceof Object)) return;\n\n    for (var key in attrs) {\n      el.setAttribute(key, attrs[key]);\n    }\n\n    ;\n  }\n\n  createHeader(level, classList, text) {\n    let tag = level && typeof level === 'number' ? 'H' + level : 'H2';\n    let header = this.createElement(tag, classList == '' ? 'section-title-' + level : classList, text);\n    return header;\n  }\n\n  createElement(tag, classList, text) {\n    let el = document.createElement(tag);\n    el = this.addClasses(el, classList);\n    text && (typeof text === 'string' || typeof text === 'number') && el.appendChild(document.createTextNode(text));\n    return el;\n  }\n\n  addClasses(el, classList) {\n    if (classList instanceof Array) {\n      classList.forEach(function (cls) {\n        el.classList.add(cls);\n      });\n    } else if (typeof classList === 'string' && classList != '') {\n      el.classList.add(classList);\n    }\n\n    return el;\n  }\n\n  removeClasses(el, classList) {\n    if (classList instanceof Array) {\n      classList.forEach(function (cls) {\n        el.classList.remove(cls);\n      });\n    } else if (typeof classList === 'string' && classList != '') {\n      el.classList.remove(classList);\n    }\n\n    return el;\n  }\n\n  changeStyle(elem, prop, val) {\n    elem.style[prop] = val;\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Layout);\n\n//# sourceURL=webpack:///./generic/blink-src/js/layout/main.js?")},"./generic/blink-src/js/main.js":
/*!**************************************!*\
  !*** ./generic/blink-src/js/main.js ***!
  \**************************************/
/*! no exports provided */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _cke_styles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cke_styles */ "./generic/blink-src/js/cke_styles.js");\n/* harmony import */ var _overrides__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./overrides */ "./generic/blink-src/js/overrides.js");\n/* harmony import */ var _layout_main__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layout/main */ "./generic/blink-src/js/layout/main.js");\n/*\n*   Javascript principal con la estructura básica del estilo\n*/\n\n\n\n\n(function (blink) {\n  \'use strict\';\n\n  var GenericStyle = function () {\n    blink.theme.styles.basic.apply(this, arguments);\n  };\n\n  GenericStyle.prototype = {\n    parent: blink.theme.styles.basic.prototype,\n    bodyClassName: \'content_type_clase_generic\',\n    extraPlugins: [\'image2\'],\n    ckEditorStyles: {\n      name: \'generic\',\n      styles: _cke_styles__WEBPACK_IMPORTED_MODULE_0__["default"]\n    },\n    init: function () {\n      this.layout = new _layout_main__WEBPACK_IMPORTED_MODULE_2__["default"]();\n      this.parent.init.call(this);\n      this.removeFinalSlide();\n      this.layout.init();\n    },\n    ..._overrides__WEBPACK_IMPORTED_MODULE_1__["default"]\n  };\n  GenericStyle.prototype = _.extend({}, new blink.theme.styles.basic(), GenericStyle.prototype);\n  blink.theme.styles[\'generic\'] = GenericStyle;\n})(blink);\n\n//# sourceURL=webpack:///./generic/blink-src/js/main.js?')},"./generic/blink-src/js/overrides.js":
/*!*******************************************!*\
  !*** ./generic/blink-src/js/overrides.js ***!
  \*******************************************/
/*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/*\n*   Javascript donde están las funciones que sobreescriben a funciones de Basic\n*/\nconst overrides = {\n  isAdaptative: () => true,\n  showBookIndexInClass: () => {\n    return true;\n  },\n  removeFinalSlide: t => {\n    let thisStyle = blink.activity.currentStyle;\n    thisStyle.parent.removeFinalSlide.call(thisStyle, true);\n  },\n  processHash: () => {\n    var hash = '',\n        curso = blink.getCourse(idcurso, true, true),\n        tema = '',\n        actividad = '';\n\n    if (!curso.responseJSON || !curso.responseJSON.units || curso.responseJSON.units.length <= 0) {\n      return '';\n    }\n\n    _.find(curso.responseJSON.units, function (unit) {\n      _.find(unit.subunits, function (subunit) {\n        if (subunit.id == window.idclase) {\n          actividad = subunit;\n          tema = unit;\n          return;\n        }\n      });\n\n      if (actividad === '') {\n        _.find(unit.resources, function (resource) {\n          if (resource.id == window.idclase) {\n            actividad = resource;\n            tema = unit;\n            return;\n          }\n        });\n      }\n\n      if (typeof window.idtema !== 'undefined' && window.idtema !== '' && unit.id == window.idtema) {\n        tema = unit;\n        return;\n      }\n    });\n\n    if (typeof tema === 'undefined' || typeof tema.number === 'undefined' || tema.number - 1 <= 0) {\n      return '#home';\n    }\n\n    if (typeof actividad.onlyVisibleTeachers !== 'undefined' && actividad.onlyVisibleTeachers) {\n      hash = '#unit_' + parseInt(tema.number - 1) + '_teacherarea';\n    } else {\n      hash = '#unit_' + parseInt(tema.number - 1) + '_studentarea';\n    }\n\n    return hash;\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (overrides);\n\n//# sourceURL=webpack:///./generic/blink-src/js/overrides.js?")},"./generic/blink-src/styles/main.scss":
/*!********************************************!*\
  !*** ./generic/blink-src/styles/main.scss ***!
  \********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin\n    if(false) { var cssReload; }\n  \n\n//# sourceURL=webpack:///./generic/blink-src/styles/main.scss?")},0:
/*!*********************************************************************************!*\
  !*** multi ./generic/blink-src/js/main.js ./generic/blink-src/styles/main.scss ***!
  \*********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('__webpack_require__(/*! P:\\workspaces\\web\\blinkweb\\blink\\www\\themes\\responsive\\assets\\styles\\generic\\blink-src\\js\\main.js */"./generic/blink-src/js/main.js");\nmodule.exports = __webpack_require__(/*! P:\\workspaces\\web\\blinkweb\\blink\\www\\themes\\responsive\\assets\\styles\\generic\\blink-src\\styles\\main.scss */"./generic/blink-src/styles/main.scss");\n\n\n//# sourceURL=webpack:///multi_./generic/blink-src/js/main.js_./generic/blink-src/styles/main.scss?')}});